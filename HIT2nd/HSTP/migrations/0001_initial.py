# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-06-02 09:16
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(re.compile(b'^[\\w.@+-]+$'), 'Enter a valid username.', b'invalid')])),
                ('password', models.CharField(max_length=6)),
                ('realname', models.CharField(blank=True, max_length=30, null=True)),
                ('nickname', models.CharField(blank=True, default=b'\xe5\x8c\xbf\xe5\x90\x8d', max_length=30, null=True)),
                ('register_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('IDcard', models.CharField(blank=True, max_length=18, null=True)),
                ('studentID', models.IntegerField(default=0, max_length=10)),
                ('colledge', models.CharField(blank=True, max_length=50, null=True)),
                ('school', models.CharField(blank=True, max_length=50, null=True)),
                ('major', models.CharField(blank=True, max_length=50, null=True)),
                ('grade', models.CharField(blank=True, max_length=50, null=True)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('sex', models.BooleanField()),
                ('is_identified', models.BooleanField()),
                ('seller_level', models.IntegerField(default=1)),
                ('seller_products_count', models.IntegerField(default=0)),
                ('buyer_level', models.IntegerField(default=1)),
                ('buyer_products_count', models.IntegerField(default=0)),
                ('is_lonly_dog', models.BooleanField()),
                ('is_online', models.BooleanField()),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'client/images')),
                ('rid', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200)),
                ('comment_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200)),
                ('message_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, unique=True)),
                ('name', models.CharField(max_length=80)),
                ('price', models.FloatField()),
                ('trading_place', models.CharField(max_length=80)),
                ('is_identified', models.BooleanField(default=False)),
                ('introduction', models.TextField(blank=True, max_length=500, null=True)),
                ('is_reserved', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'product/images')),
                ('auction', models.BooleanField(default=False)),
                ('auction_add', models.FloatField(default=0)),
                ('auction_deadline', models.DateTimeField(default=datetime.datetime(2050, 1, 1, 0, 0))),
                ('view_count', models.IntegerField(default=0)),
                ('category', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='want',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Booth',
            fields=[
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='booths', serialize=False, to='HSTP.Client', unique=True)),
                ('booth_name', models.TextField(blank=True, max_length=20, null=True)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('address', models.TextField(blank=True, max_length=50, null=True)),
                ('introduction', models.TextField(blank=True, max_length=500, null=True)),
                ('show_date', models.TextField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='categories', serialize=False, to='HSTP.Product')),
                ('category', models.CharField(max_length=40)),
            ],
        ),
        migrations.AddField(
            model_name='want',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='want_msg', to='HSTP.Client'),
        ),
        migrations.AddField(
            model_name='product',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='HSTP.Client'),
        ),
        migrations.AddField(
            model_name='product',
            name='collected_clients',
            field=models.ManyToManyField(related_name='collect_products', to='HSTP.Client'),
        ),
        migrations.AddField(
            model_name='product',
            name='who_reserved',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reserved_products', to='HSTP.Client'),
        ),
        migrations.AddField(
            model_name='message',
            name='listener',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receive_msg', to='HSTP.Client'),
        ),
        migrations.AddField(
            model_name='message',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='msg', to='HSTP.Product'),
        ),
        migrations.AddField(
            model_name='message',
            name='speaker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='send_msg', to='HSTP.Client'),
        ),
        migrations.AddField(
            model_name='comment',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='HSTP.Client'),
        ),
        migrations.AddField(
            model_name='comment',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='HSTP.Product'),
        ),
        migrations.AddField(
            model_name='comment',
            name='want',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='HSTP.want'),
        ),
        migrations.AddField(
            model_name='product',
            name='which_booth',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='HSTP.Booth'),
        ),
    ]
